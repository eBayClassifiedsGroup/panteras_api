#!/usr/bin/env ruby

require 'open3'
require 'socket'
require 'optparse'

$VERSION = '1.0.0'
$SEND_NSCA='/usr/sbin/send_nsca'
$SCRIPT='/usr/local/bin/panteras_api'
my_datacenter=Socket.ip_address_list.find { |ai| ai.ipv4? && !ai.ipv4_loopback? }.ip_address.split('.')[1]
$MESOS_MASTER="paasmaster#{my_datacenter.strip}-1.mobile.rz"
$NAGIOS_SERVICE='paas_consistency_check'

# default nagios host
defaults = { :nsca_host => 'monitor.mobile.rz', :debug => false, :error_code => 1 }
options = {}
  
OptionParser.new("Options: #{$0} -n NAGIOS_HOST [options]") do |opts|
 
 opts.release =  $VERSION
 
 opts.on("-n","--nsca-host NAGIOS_HOST","") do |n|
   options[:nsca_host] = n
 end
 
  opts.on("-d","--debug","") do |d|
    options[:debug] = true
  end

  opts.on("-c", "--critical", "Exit with CRITICAL when problems seen. Default is WARNING") do |c|
    options[:error_code] = 2 
  end
 
end.parse!

config = defaults.merge!(options)


$DEBUG = config[:debug]
my_hostname = Socket.gethostname.strip
my_fqdn = Socket.gethostbyname(my_hostname).first
nsca_host = config[:nsca_host]
output = []
error = []
puts "DEBUG MODE ON" if $DEBUG
puts "NSCA host set to: #{nsca_host}" if $DEBUG

def send_ncsa(nagios_host, host, result, code)
  output = []
  error = []
  command="#{$SEND_NSCA} -c /etc/send_nsca.cfg -H #{nagios_host}"
  puts "Running command: #{command}" if $DEBUG
  Open3.popen3(command) do |stdin, stdout, stderr, wait_thr|
  
  result_line = "#{host}\t#{$NAGIOS_SERVICE}\t#{code}\t#{result}"
  puts "Sending result to #{nagios_host}: #{result_line}" if $DEBUG
  stdin.puts result_line
  stdin.close
  
  exit_status = wait_thr.value
  
      unless exit_status.success?
          $stderr.puts stderr.readlines
          raise StandardError, "Command '#{command}' returned status #{exit_status.exitstatus}"          
        end
        
        while line = stderr.gets
          if line.strip.length > 0
            puts "Error (send_ncsa): #{line}" if $DEBUG
            error << line.strip
          end
        end
        
        while line = stdout.gets
         if line.strip.length > 0 
           puts "Output (send ncsa): #{line}" if $DEBUG
           output << line.strip
         end
        end  

  end
  
  puts output.join if ( ! output.empty? && $DEBUG ) 
  puts error.join if ( ! error.empty? && $DEBUG )

end

command = "#{$SCRIPT} -m #{$MESOS_MASTER}"
puts "Running command: #{command}" if $DEBUG


Open3.popen3(command) do |stdin, stdout, stderr, wait_thr|

	exit_status = wait_thr.value
	    unless exit_status.success?
          send_ncsa(nsca_host, my_hostname, stderr.readlines, config[:error_code])
          raise StandardError, "Command '#{command}' returned status #{exit_status.exitstatus}"          
        end
        
        while line = stderr.gets          
          if line.strip.length > 0
            puts "Error: #{line}" if $DEBUG
            error << line.strip
          end
        end
        
        while line = stdout.gets
         if line.strip.length > 0 
           puts "Output: #{line}" if $DEBUG        
           output << line.strip
         end
        end  
        
        if ! error.empty?
          error_msg = error.join
          puts "#{my_hostname}: #{error_msg} exit_code #{config[:error_code]}"
          send_ncsa(nsca_host, my_hostname, error.join, config[:error_code])
        else
          output_msg = output.join
          puts "#{my_hostname}: #{output_msg} exit_code #{config[:error_code]}"
          send_ncsa(nsca_host, my_hostname, output.join, 0)
        end

end
